<stresstest>
  <testtype inserttime="true">querytester</testtype>
  <numloops>1000</numloops>
  <toscreen>true</toscreen>
  <sleeptime>1</sleeptime>
  <logoption>debug</logoption>
  <logfilename>auto</logfilename>
  <outputfile>auto</outputfile>
  <operations>
    <checkinterval>10</checkinterval>
    <loaddir>/project/archive1/users/atsoi/stress</loaddir> 
  </operations>
  <verification>
    <concurrency>5</concurrency>
    <repeat>50</repeat>
    <queries>

      <query><![CDATA[
      xquery version "1.0-ml";
      declare namespace qa="http://marklogic.com/qa";
      let $ts := xdmp:request-timestamp()
      let $a1 := fn:count(xdmp:database-forests(xdmp:database("active")))
      let $h1 := fn:count(xdmp:database-forests(xdmp:database("history")))
      let $superdb := xdmp:eval(
      "let $count := fn:count(fn:collection(""_COLLECTION_""))
       let $forests := xdmp:query-forests()
       return <a><count>{$count}</count><forests>{$forests}</forests></a>
      ", (),
          <options xmlns="xdmp:eval">
            <database>{xdmp:database("Documents")}</database>
            <timestamp>{$ts}</timestamp>
          </options>)
      let $active := xdmp:eval(
      "let $count := fn:count(fn:collection(""_COLLECTION_""))
       let $forests := xdmp:query-forests()
       return <a><count>{$count}</count><forests>{$forests}</forests></a>
      ", (),
          <options xmlns="xdmp:eval">
            <database>{xdmp:database("active")}</database>
            <timestamp>{$ts}</timestamp>
          </options>)
      let $history := xdmp:eval(
      "let $count := fn:count(fn:collection(""_COLLECTION_""))
       let $forests := xdmp:query-forests()
       return <a><count>{$count}</count><forests>{$forests}</forests></a>
      ", (),
          <options xmlns="xdmp:eval">
            <database>{xdmp:database("history")}</database>
            <timestamp>{$ts}</timestamp>
          </options>)
      let $a2 := fn:count(xdmp:database-forests(xdmp:database("active")))
      let $h2 := fn:count(xdmp:database-forests(xdmp:database("history")))
      let $_ := xdmp:log(fn:concat("TierStorage at ", "_COLLECTION_",
                    " loop:  _LOOP_  count: ",
                    $superdb/count, " ", $active/count, " ", $history/count,
                    " ts:", $ts,
                    " active:", $a1, " ", $a2,
                    " history:", $h1, " ", $h2))
      let $result :=
        if (($a1 = $a2) and ($h1 = $h2)) then
          (($superdb/count = _LOOP_ * 2500) and ($superdb/count = ($active/count + $history/count)))
        else
          fn:true()
      let $_ := if ($result eq fn:false()) 
      then 
         (xdmp:log(fn:concat("TierStorage superdb forests:", fn:string-join(xs:string($superdb/forests), " "))),
         xdmp:log(fn:concat("TierStorage active forests:", fn:string-join(xs:string($active/forests), " "))),
         xdmp:log(fn:concat("TierStorage history forests:", fn:string-join(xs:string($history/forests), " "))))
      else ()
      return ($result,
      xdmp:log(fn:concat("TierStorage stress query eval took ", xdmp:elapsed-time())))
      ]]></query>

    </queries>
  </verification>  
</stresstest>
